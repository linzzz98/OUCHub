Voting-based Incremental Structure-from-Motion
===============================================

本文提出了一种基于投票的增量SfM方法来改进摄像机注册过程。

:步骤:

   1. 相机之间的 **接近程度** 被用作投票，以确定哪些相机将注册。

   2. 对于每个摄像机，同时使用两种方法来估计摄像机位姿，并使用内点数量作为投票来确定哪个位姿更准确。

   3. 通过从视图图中估计先验全局摄像机旋转，与先验摄像机旋转一致的摄像机位姿被认为获得了双重投票并被优先保留。（全局旋转 接近 增量旋转的优先保留）

   4. 在所有这些优先摄像机被校准之后，其他摄像机被递增地配准。


在本文中，通过投票式的方法，来确定：

1. 哪对相机被选为种子？

   **可能已校准的相机数量被视为决定哪些极边是种子候选者的投票。**

2. 哪些相机将被注册？

   **校准相机和未校准相机之间的接近程度被认为是决定哪些相机更有可能被校准的投票。**

3. 如何校准这些相机？

   **给定2D-3D关联，使用两种方法来同时估计摄像机位姿，然后根据内点的数量决定哪一个是正确的投票。**

4. 校准结果是否令人信服？

   验证步骤。首先从视图图中估计先验全局摄像机旋转。当校准的相机旋转与其先验相机旋转一致时，它被优先保持，否则被暂时丢弃。在所有这些优先摄像机被校准后，其他摄像机被增量配准。

   .. note::

      一致性意味着这个校准的相机位姿有双重投票，表明它更有可能是正确的。由于少量极线边缘异常值不影响全局旋转估计，因此全局旋转信息实际上验证了增量校准过程，提高了摄像机校准的鲁棒性。

.. figure:: 1.jpg
   :figclass: align-center

   系统的输入是一个视图图，在每条边上，对极几何是用5点法估算的。系统的输出是校准的摄像机位姿和相应的稀疏场景点。


先验摄像机旋转估计
-------------------------

.. math::

   \begin{eqnarray}
      R_{ij} &=& R_i R_i^T\\
      \lambda_{ij} t_{ij} &=& R_j (c_i - c_j)
   \end{eqnarray}


其中 :math:`R_i` 和 :math:`c_i` 分别表示摄像机 :math:`I` 的绝对旋转和位置。

为了获得良好的初始化，并使更多的内点边进入优化，利用视图图的最大生成树(MST)来生成初始相机旋转，其中加权函数被设置为每个边中匹配内联的数量。

对于MST中的每条边，执行局部BA调整以重新定义其对极几何。然后，通过定义视图图中邻居数量最多的一个摄像机，
并将其旋转设置为单位矩阵，可以通过链式法则获得其他摄像机的旋转。
基于这些相机旋转初始化，通过计算测地线距离过滤总边缘。

通过将所有这些内点边（edges inliers）输入旋转估计系统，获得了最终的先验相机旋转。


相机种子重建
-----------------------

相机种子选择考虑了下一次迭代中可能校准的相机的数量。

通过联合查找算法从成对特征匹配中生成特征track，对于每个边缘，在其可见track中的所有连接的摄像机可以在下一次迭代中被注册。当一个摄像机被这些可见轨迹α次覆盖时，
它被认为是将在下一次迭代中注册的可能摄像机（In this paper  :math:`\alpha = 30` ）

然后对按照track排好序的图片依次执行两视图几何 + BA 估计相机位姿。

考虑到对极几何 :math:`\{R_{ij}, t_{ij}\}` 和相对几何 :math:`\{R_{ij}^r, t_{ij}^r\}`

通过以下方法验证相对几何的差异:

.. math::

   \begin{eqnarray}
      \beta_1 = acos(||R_{ij} - R_{ij}^r||_F)\\
      \beta_2 = acos(||t_{ij} - t_{ij}^r||_F)
   \end{eqnarray}


当 :math:`\beta_1` 或 :math:`\beta_2` 大于30°时，局部重建是不稳定的，并对下一个候选种子进行重建。

相机注册
------------------

给定初始重建，通过相机配准迭代校准其他相机位姿。

1. 相机选择：不仅仅关注2D-3D对应的数量，而且考虑未校准摄像机和校准摄像机之间的联系。

给定校准的摄像机和视图，每个未校准的摄像机从这些校准的摄像机中获得一张选票。
对于每个未校准的摄像机 :math:`C_i` ，**投票** 定义为相应的接近度，通过以下方式计算:

.. math::

   V_i = \sum\limits_i^M m_{ij}

其中 :math:`m_{ij}` 表示边 :math:`E_{ij}` 中的track数量，边 :math:`E_{ij}` 连接未校准的摄像机 :math:`C_i` 和校准的摄像机 :math:`C_j` , :math:`M` 是连接到摄像机 :math:`C_i` 的校准的摄像机的数量。

假设未标定摄像机的最大度数 **maximal degree** 为 :math:`V_{max}` ，则degree大于 :math:`\gamma * V_{max}` 的摄像机被选为后续摄像机标定的候选。

相机标定
---------------------

给定足够的2D-3D相关性，本文提出了一种投票方案来获得精确的摄像机位姿。

两种方法同时用于估计摄像机位姿:P3P算法和EPnP算法。

对于每个候选摄像机，评估由这些方法产生的所有摄像机位姿，并且具有最多2D-3D对应线的最佳摄像机位姿被设置为校准的摄像机位姿。

当两种方法具有相同的最佳内点数时，考虑所有对应内点上的重投影误差之和，选择重投影误差最小的一种作为摄像机位姿估计 :math:`\{R_i,T_i\}`

为了使相机位姿变得更精确，保持相机内参 :math:`K_i` 和3D场景点 :math:`\{X_j\}` 不变，然后通过最小化2D图像特征 :math:`\{x_{ij}\}` 和相应3D场景点 :math:`\{X_j\}` 的投影之间的差异来重新确定相机位姿:

.. math::

   \mathop{min}_{R_i,T_i} \sum\limits_{i=1}^N \sum\limits_{j=1}^M ||x_{ij} - \rho(K_i, R_i, T_i, X_j)||_{huber}

其中 :math:`\rho(·)` 是相机投影函数。

相机验证
----------------

给定当前迭代中的校准相机位姿，将这些与之前估计的先验全局相机旋转进行比较。

对于摄像机 :math:`C_i` ，让当前校准的摄像机旋转是 :math:`R_i` ，对应的先验全局相机旋转是 :math:`R_i^p`

残差定义为： :math:`acos(||R_i^p * R_i^T - I||_F)` 其中 :math:`I` 是单位阵。

当残差大于30度时，认为全局先验和增量校准之间存在较大差异。暂时将其丢弃，并在下一次迭代中对其进行校准。

.. note::

   尽管大多数先验全局旋转是准确的，但由于弱连接或很少匹配内联，通常会有一些粗略的估计。

   因此，在本文的工作中，当一次迭代中所有校准的摄像机与先验全局旋转有很大差异时，认为所有一致的摄像机都已重建，然后只在后续迭代中执行选择和校准模块。

BA
----

同colmap（局部-全局 重三角化重BA）


实验
---------

数据集：

1. 基准数据集，包括Fountain-P11、Herz-Jesus-P25和Castle-P30

2. 序列数据集，包括767幅图像的CASIA和1040幅图像的Campus

3. 无序数据集，包括474幅图像的Montreal和2508幅图像的Piccadilly

4. 模糊数据集，Cup、天坛和SportsArena

比较：

1. colmap

2. theiaSfM

.. figure:: 2.jpg
   :figclass: align-center

.. figure:: 4.jpg
   :figclass: align-center

.. figure:: 3.jpg
   :figclass: align-center

.. figure:: 5.jpg
   :figclass: align-center
