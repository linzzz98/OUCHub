知识点
====================


数据库
----------------------

1. 数据库设计的步骤为

   需求设计---概念结构设计---逻辑结构设计---物理结构设计---数据库实施---数据库运行和维护

2. SQL语言具有数据查询、数据定义、数据操作和数据控制的功能

3. 数据的逻辑独立性是指模式改变时，外模式和应用程序不变

4. 要保证数据库的逻辑独立性，需要修改的是模式与外模式之间的映像；

   要保证数据库的物理独立性，需要修改的是模式与内模式之间的映像

5. 关系模式设计不当会导致数据冗余、更新异常、插入异常、删除异常

   数据共享会导致的问题有：（1）数据被非法修改、（2）死锁、（3）数据被非法读取

6. 在关系数据模型中，元组-->实体、二维表-->实体集

计算机网络
---------------------------

协议：

.. figure:: 0.jpg
   :figclass: align-center

..



计算机网络中间设备：

网关，路由器，交换机，网桥，中继器，集线器

* 传输层（网关）

..

* 网络层（路由器）

..

* 数据链路层（网桥，交换机）

..

* 物理层（中继器，集线器）

|:point_right:| \ `详解 <https://blog.csdn.net/m0_45406092/article/details/118634985>`_


1. ICMP报文的种类有两种类型：

   （1）ICMP差错报告报文：终点不可达、源点抑制、时间超过、改变路由、参数问题

   （2）ICMP询问报文：回送请求或回答、时间戳请求或回答

2. A类地址 0-127， B类地址 128-191， C类地址 192-223

3. 放大器放大模拟信号、中继器放大数字信号

4. 计算机网络层的主要功能是路由选择和寻址，在任意节点间进行数据报的传输

5. 双绞线分为屏蔽双绞线和非屏蔽双绞线

6. 集线器既不能隔离冲突域，又不能隔离广播域

   网桥和交换机只能隔离冲突域，不能隔离广播域

   路由器既能隔离冲突域，又能隔离广播域

7. PPP协议位填充法，连续5个1，后面加一个0，连续5个1且后面有0的，删除0（透明传输）

8. 某网络的IP地址块为192.168.5.0/24，采用长子网划分，子网掩码为255.255.255.248，则

   （1）该网络的最大子网个数为？

   （2）每个子网内的最大可分配地址个数分别为？

   解答：

   （1）网络前缀占24位，子网掩码最后为248 = 11111000，所以子网的网络前缀占24 + 5 = 29位，则最大子网个数 = :math:`2^5 = 32` 个

   （2）主机号占 8 - 5 = 3位，最多可分配的地址个数为 :math:`2^3 - 2 = 6` 个（全0 全1 减去）

9. 10M宽带上网，10M指的是数据通信中的 **最高数据传输速率**

10. 统计时分多路复用具有动态分配的功能

11. 奇偶校验的意思是1的个数是奇数还是偶数

12. ARP协议是根据IP地址查询MAC地址

13. UDP首部包含源端口、目的端口、长度和校验和

14. 以太网提供无连接、不可靠的服务

15. 计算机网络按功能组成，可分为通信子网和资源子网

    计算机网络按工作方式，可分为边缘部分和核心部分

    计算机网络按物理组成，可分为硬件、软件、协议

    计算机网络按通信方式，可分为点对点（星形、环形）和广播式（总线型）

16. 模拟信号是连续信号，数字信号是离散信号


.. csv-table:: OSI 七层
   :file: osi.csv
   :widths: 30, 30, 30, 30, 30, 30
   :header-rows: 1


TCP 三次握手四次挥手

**TCP三次握手**

TCP运输连接有三个阶段：连接建立、数据传送、连接释放

TCP连接过程通常叫做握手，握手需要客户端和服务器端交换三个报文，如下图所示

.. figure:: 1.jpg
   :figclass: align-center

之所以需要三次握手是因为TCP是可靠传输，三次能够刚好可靠又不多余

TCP三次握手与Socket的连接过程是相关联对应的，Socket就是对于TCP/IP的封装么

客户端有CLOSED、SYN-SEND、ESTABLISHED三种状态

客户端有CLOSED、LISTEN、SYN-RCVD、ESTABLISHED四种状态

服务器会首先创建连接，并且进入监听等待阶段，等待客户端的请求

当需要发送请求时，浏览器客户端主动打开连接，然后服务器被动打开连接

**连接过程**

客户端在需要时，向服务器发起请求连接报文，发出后状态从CLOSED转换为SYN-SEND  同步-已发送状态

服务器一直处于LISTEN状态，接收到请求后，对客户端的请求进行回应，转换为SYN-RCVD，同步-已收到状态

客户端收到服务器的回应后，状态转换为ESTABLISHED，并且再次向服务器发送确认

服务器收到客户端的确认之后，服务器也转换为ESTABLISHED状态，完成了连接

发出消息或者收到消息后状态才会进行切换

客户端与服务器的握手是一个往复确认的过程

客户端：发出确认请求，SYN=1，seq=x，你听得到么，我想建立连接（SYN=1），我的序号是x（seq=x）

服务器：对请求进行确认，也就是回应，我听到了（ACK=1，ack=x+1），你听得到么（SYN=1），我的序号是y（seq=y）

客户端：对服务器的回应进行确认，我听到了（ACK=1，ack=y+1），我的序号是x+1

IP数据报经过运输层需要分段发送，所以在TCP的处理过程中，有序号的概念

比如客户端说我要从666号开始，发送100个数据，服务器说，我是从888号开始回应的

上面的seq=x  和 seq=y   seq=x+1（上一个seq=x，下一个自然就是seq=x+1了）都是各自的序号

握手的过程就是SYN seq   ACK ack的来回确认

SYN  ACK是头部的字段，可以理解为标志位，协议中有对他们的值有具体的规定

ack就是确认号，确认号是期望收到的对方的下一个报文段的第一个数据字节的序号，也就是收到的序号+1

否则随便一个，怎么对得上号

**为什么要三次握手？**

如果不是三次握手，只有两次

如果客户端发出请求连接时，报文延时了，于是客户端重新发送了一次连接请求消息

后来收到了确认，建立了连接，然后完成了数据传输，关闭了连接

此时，服务器收到了那个迟到的请求消息，此时他应该是个废物了

但是如果只有两次握手，服务器收到请求就响应建立了连接了

但是如果是三次，客户端不会再次确认，服务器也就随后知道了这消息有问题，不会建立连接

**TCP四次挥手**

连接建立以后就可以进行数据通信传输了

通信结束后，需要断开连接，断开连接需要四次交互，常被称为四次挥手

最初状态均为ESTABLISHED，客户端与服务器相互进行数据传送

下图假设客户端无数据发送，请求断开连接

.. figure:: 2.jpg
   :figclass: align-center

**断开过程**

客户端无数据发送时，请求关闭连接，我好了，我想断开连接了（FIN=1）我的序号是u（u就是之前传送过的所有数据的最后一个字节的序号+1）

此时客户端转变为FIN-WAIT-1状态

服务器收到客户端的消息后，告诉客户端“好的，我知道了”（ACK=1，ack=u+1），这条消息的序号是v（seq=v ，这是服务器发送消息的序号)

此时服务器的状态就转换为了CLOSE-WAIT状态

此时，客户端通往服务器的路就断开了，客户端不能向服务器发送数据

但是服务器仍旧可以向客户端发送数据，现在是“半关闭”的状态

当客户端收到来自服务器的确认之后，进入FIN-WAIT-2状态，等待服务器那边说断开连接，等待中。。。。。

当服务器所有的数据也都完全发送完成了之后，服务器才开始主动告知客户端断开连接（FIN=1，seq=w）

这中间服务器可能又继续发送了一些数据，可能是v+1 也可能发送了更多，所以设置为w

并且再次发送确认信息（ACK=1，ack=u+1，因为客户端已经不能发送数据了，服务器期望收到的序号永远都是最后一个序号+1，也就是u+1）

这时，服务器就进入了LAST-ACK状态，最后确认状态

客户端收到了服务器的断开连接请求后，也需要给出确认响应（ACK=1，ack=w+1，seq=u+1），然后进入TIME-WAIT状态

等待两个MSL后，进入关闭状态

MSL 是Maximum Segment Lifetime英文的缩写“报文最大生存时间”，他是任何报文在网络上存在的最长时间，超过这个时间报文将被丢弃。

服务器最终收到来自客户端的确认信息后，关闭，进入CLOSED状态

四次挥手也是一个互相确认的过程，你说不玩了，别人答应了，还要等别人都搞好了再告诉你可以走了，你才能走

客户端：我不想玩了

服务器：好的我知道了

服务器：你可以走了

客户端：好的我走了

就如同在网吧上网，你点击下机之后，再去网管那边结账

结账清楚了之后才彻底结束，而不是你说走就走了，难道你办会员卡了么

这个过程很好理解，客户端发出请求后，并不意味着服务器都已经完成响应

所以当客户端请求断开时，并不能立即断开，还需要等待服务器那边处理妥当，再来通知你的确是可以断开了

消息发出来谁知道别人收没收到，所以还需要一个确认