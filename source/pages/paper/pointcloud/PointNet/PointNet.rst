PointNet
============

大多数研究人员将点云数据转换为规则的3D体素网格或图像集合，但是使得数据变得庞大。

本文中设计了一种直接消耗点云的新型神经网络，该网络很好地考虑了输入中点的排列不变性。为从对象分类，零件分割到场景语义解析的应用程序提供了统一的体系结构。

Introduction
----------------
本文专注于仅使用点云的3D几何图形的不同输入表示形式。

.. important::
   该网络尊重这样的事实：点云是一组点，成员的排列不变，因此在网络计算中具有一定的对称性。还需要考虑刚性运动的其他不变性。

PointNet直接将点云作为输入。在初始阶段，每个点都被相同且独立地处理。每个点仅由其三个坐标（x，y，z）表示。可以通过计算法线和其他局部或全局特征来添加其他尺度。

.. important::
   该方法的关键是使用单个对称函数，即最大池化层。

网络有效地学习了一组优化功能/标准，这些功能/标准选择了点云中有意义的点，并对进行了编码。

网络的最终完全连接层将这些学习的最优值汇总到上述整个形状的全局描述符中（形状分类），或用于预测每个点的标签（形状分割）。

.. tip::
   通过添加一个依赖于数据的空间转换器网络，在PointNet处理数据之前对数据进行规范化，以进一步改善结果。


Input/Output
--------------------

PointNet框架直接使用无序点集作为输入。

点云表示为一组3D点 :math:`\{P_i | i = 1,...,n\}` ，其中每个点 :math:`P_i` 是其 :math:`(x,y,z)` 坐标加上额外特征通道（例如颜色，法线等）的向量。

* 对于目标分类任务，输出为k个分数，分别对应k个可能的类别。

* 对于语义分割任务，输出 :math:`n\times m` 个分数，分别对应n个点相对于m各类别的分数。

.. figure:: 1.jpg
   :figclass: align-center

   PointNet 应用场景

Deep Learning on Point Sets
-------------------------------

Properties of Point Sets in  :math:`R^n`
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

输入是欧几里得空间的点的子集。对于一个欧式空间里的点云，有三个主要特征：

1. 无序性：虽然输入的点云是有顺序的，但是显然这个顺序不应当影响结果。

2. 点之间的交互：每个点不是独立的，而是与其周围的一些点共同蕴含了一些信息，因而模型应当能够抓住局部的结构和局部之间的交互。

3. 变换不变性：比如点云整体的旋转和平移不应该影响它的分类或者分割。

PointNet Architecture
^^^^^^^^^^^^^^^^^^^^^^^
.. figure:: 2.jpg
   :figclass: align-center

   PointNet Architecture

分类网络对于输入的点云进行输入变换（input transform）和特征变换（feature transform），随后通过最大池化将特征整合在一起。

.. note::

   * 输入： n个点

   * 输出： k个类

分割网络则是分类网络的延伸，它连接全局特征和局部特征，输出每个点的得分。

.. note::

   mlp = multi-layer perceptron （多层感知机）

.. important::
   mlp 括号中的数字为层的大小。

   Batchnorm 用于具有ReLU的所有层。

   Dropout 用于分类网中的最后一个mlp。

